##
- name: Check Cloud
  shell : |
    if [ -f "/etc/waagent.conf" ];then echo "azure";fi
    if [ -d "/usr/local/aegis" ];then echo "alicloud";fi
    if [ -f "/snap/bin/amazon-ssm-agent.ssm-cli" ];then echo "aws";fi
    if [ -f "/usr/bin/amazon-ssm-agent" ];then echo "aws";fi
    if [ -d "/CloudrResetPwdAgent" ];then echo "huaiwei";fi
  register: cloud

    
- block:
  - name: Create swap Space
    command: dd if=/dev/zero of=/mnt/swap bs=256M count=8

  - name: Make swap
    command: mkswap /mnt/swap

  - name: Action swap
    command: swapon /mnt/swap
  
  - name: Add to fstab
    lineinfile:
        dest: /etc/fstab
        regexp: '/mnt/swap'
        line: "/mnt/swap swap swap defaults 0 0"
        state: present

  when: (ansible_swaptotal_mb == 0) and (cloud.stdout != 'azure')

- block:
  - name: ResourceDisk EnableSwap
    lineinfile:
      dest: /etc/waagent.conf
      regexp: 'ResourceDisk.EnableSwap=n'
      line: "ResourceDisk.EnableSwap=y"
      state: present

  - name: ResourceDisk SwapSizeMB
    lineinfile:
      dest: /etc/waagent.conf
      regexp: 'ResourceDisk.SwapSizeMB=0'
      line: "ResourceDisk.SwapSizeMB=2048"
      state: present
      
  - name: Install not root user
    shell: |
      sudo sed -i "s/<allow_any>no<\/allow_any>/<allow_any>yes<\/allow_any>/g" /usr/share/polkit-1/actions/org.freedesktop.systemd1.policy
      sudo sed -i "s/<allow_inactive>no<\/allow_inactive>/<allow_inactive>yes<\/allow_inactive>/g" /usr/share/polkit-1/actions/org.freedesktop.systemd1.policy
      sudo sed -i "s/<allow_active>no<\/allow_active>/<allow_active>yes<\/allow_active>/g" /usr/share/polkit-1/actions/org.freedesktop.systemd1.policy
  when: cloud.stdout == 'azure'

- block:
  - name: AWS Configure
    apt:
      name: ec2-instance-connect
      update_cache: yes
    when: ansible_os_family == 'Debian'

  - name: AWS Configure
    yum:
      name: ec2-instance-connect
    when: ansible_os_family == 'RedHat'
  
  - name: Start ec2-instance-connect
    service:
      name: ec2-instance-connect
      state: started
      enabled: yes
      
  - name: Install not root user
    shell: |
      sudo sed -i "s/<allow_any>no<\/allow_any>/<allow_any>yes<\/allow_any>/g" /usr/share/polkit-1/actions/org.freedesktop.systemd1.policy
      sudo sed -i "s/<allow_inactive>no<\/allow_inactive>/<allow_inactive>yes<\/allow_inactive>/g" /usr/share/polkit-1/actions/org.freedesktop.systemd1.policy
      sudo sed -i "s/<allow_active>no<\/allow_active>/<allow_active>yes<\/allow_active>/g" /usr/share/polkit-1/actions/org.freedesktop.systemd1.policy
  when: cloud.stdout == 'aws'
  
# install cloud agent
- block:
  - name: Install Aliyun Aqs and aliyun_assist
    shell: |
      wget "https://aegis.alicdn.com/download/install/2.0/linux/AliAqsInstall_64.sh" && chmod +x AliAqsInstall_64.sh && ./AliAqsInstall_64.sh sJmepE
      wget "https://aliyun-client-assist.oss-accelerate.aliyuncs.com/linux/aliyun_assist_latest.rpm"
      rpm -ivh --force aliyun_assist_latest.rpm
      #wget "https://aliyun-client-assist.oss-accelerate.aliyuncs.com/linux/aliyun_assist_latest.deb"
      #dpkg -r aliyun-assist
      systemctl restart aliyun.service
    when: cloud.stdout == 'alicloud'
    
  

  - name: Install HUAWEICLOUD Agent
    shell: wget https://telescope-ap-southeast-1.obs.ap-southeast-1.myhuaweicloud.com/scripts/agentBatchPackage.sh && chmod 755 agentBatchPackage.sh && ./agentBatchPackage.sh
    args:
      chdir: /usr/local
    when: cloud.stdout == 'huawei'
  when: cloud_agent
